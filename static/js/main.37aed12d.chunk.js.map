{"version":3,"sources":["Header.jsx","Todo.jsx","Main.jsx","Footer.jsx","App.js","index.js"],"names":["Header","state","title","handleSubmit","event","preventDefault","_this","length","props","onSubmit","id","Date","now","completed","setState","handleChange","_event$target","target","name","value","Object","defineProperty","react_default","a","createElement","this","className","type","placeholder","onChange","autoComplete","React","Component","Todo","_ref","todo","toggle","destroyTodo","checked","htmlFor","style","fontStyle","color","textDecoration","onClick","Main","allToggleTodo","filteredTodos","toggleTodo","display","map","src_Todo","key","Footer","handleFilterByField","destroyAllCompletedTodos","unfinishedTodos","filter","concat","href","App","visibleTodos","addTodo","prevState","copiedTodo","toConsumableArray","field","handleToggleTodo","todos","objectSpread","handleAllToggleTodo","isTodoChecked","allCheckedTodos","forEach","handleDestroyTodo","updatedTodo","findIndex","splice","handleDestroyAllCompletedTodos","src_Header","src_Main","src_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.37aed12d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title } = this.state;\n\n    if (title.length < 1) {\n      return;\n    }\n\n    this.props.onSubmit({\n      id: Date.now(),\n      title,\n      completed: false,\n    });\n\n    this.setState({\n      title: '',\n    });\n  }\n\n  handleChange = (event) => {\n    event.preventDefault();\n\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleChange}\n            value={this.state.title}\n            name=\"title\"\n            autoComplete=\"off\"\n          />\n        </header>\n      </form>\n    );\n  }\n}\n\nHeader.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ todo, toggle, destroyTodo }) => {\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: '#cdcdcd',\n    textDecoration: 'line-through',\n  };\n\n  return (\n    <li>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={todo.id}\n          onChange={() => toggle(todo.id)}\n          checked={todo.completed}\n        />\n        <label\n          htmlFor=\"todo-1\"\n          style={todo.completed ? completedStyle : null}\n        >\n          {' '}\n          {todo.title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => destroyTodo(todo.id)}\n        />\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.arrayOf(PropTypes.object).isRequired,\n  toggle: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst Main = (\n  {\n    allToggleTodo,\n    filteredTodos,\n    toggleTodo,\n    destroyTodo,\n  }\n) => (\n  <section className=\"main\" style={{ display: 'block' }}>\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onClick={allToggleTodo}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n    <ul className=\"todo-list\">\n      {filteredTodos.map(todo => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          toggle={toggleTodo}\n          destroyTodo={destroyTodo}\n        />\n      ))}\n    </ul>\n  </section>\n);\n\nMain.propTypes = {\n  filteredTodos: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  allToggleTodo: PropTypes.func.isRequired,\n  toggleTodo: PropTypes.func.isRequired,\n  destroyTodo: PropTypes.func.isRequired,\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = (\n  {\n    handleFilterByField,\n    destroyAllCompletedTodos,\n    filteredTodos,\n  }\n) => {\n  const unfinishedTodos = filteredTodos\n    .filter(todo => !todo.completed);\n\n  return (\n    <footer className=\"footer\" style={{ display: 'block' }}>\n      <span className=\"todo-count\">\n        {unfinishedTodos.length < 2\n          ? `${unfinishedTodos.length} Item left`\n          : `${unfinishedTodos.length} Items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={handleFilterByField === 'All' && 'selected'}\n            onClick={() => handleFilterByField('All')}\n          >\nAll\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={handleFilterByField === 'Active' && 'selected'}\n            onClick={() => handleFilterByField('Active')}\n          >\nActive\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={handleFilterByField === 'Completed' && 'selected'}\n            onClick={() => handleFilterByField('Completed')}\n          >\nCompleted\n          </a>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n        onClick={destroyAllCompletedTodos}\n      >\n        {' '}\nClear completed\n      </button>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  filteredTodos: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  destroyAllCompletedTodos: PropTypes.func.isRequired,\n  handleFilterByField: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\nclass App extends React.Component {\n  state = {\n    visibleTodos: [],\n    filteredTodos: [],\n  }\n\n  addTodo = (todo) => {\n    this.setState((prevState) => {\n      const copiedTodo = [...prevState.visibleTodos, todo];\n\n      return {\n        visibleTodos: copiedTodo,\n        filteredTodos: copiedTodo,\n      };\n    });\n  }\n\n  handleFilterByField = (field) => {\n    this.setState((prevState) => {\n      switch (field) {\n        case 'All':\n          return { filteredTodos: prevState.visibleTodos };\n\n        case 'Active':\n          return {\n            filteredTodos: prevState.visibleTodos\n              .filter(todo => !todo.completed),\n          };\n\n        case 'Completed':\n          return {\n            filteredTodos: prevState.visibleTodos\n              .filter(todo => todo.completed),\n          };\n\n        default:\n          return this.state.filteredTodos;\n      }\n    });\n  }\n\n  handleToggleTodo = (id) => {\n    this.setState((prevState) => {\n      const todos = prevState.visibleTodos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      });\n\n      return {\n        filteredTodos: todos,\n        visibleTodos: todos,\n      };\n    });\n  }\n\n  handleAllToggleTodo = (event) => {\n    const isTodoChecked = event.target.checked;\n\n    this.setState((prevState) => {\n      const allCheckedTodos = [\n        ...prevState.visibleTodos,\n      ];\n\n      allCheckedTodos.forEach(todo => (todo.completed = isTodoChecked));\n\n      return {\n        visibleTodos: allCheckedTodos,\n        filteredTodos: allCheckedTodos,\n      };\n    });\n  }\n\n  handleDestroyTodo = (id) => {\n    const updatedTodo = this.state.visibleTodos;\n    const target = updatedTodo.findIndex(todo => todo.id === id);\n\n    updatedTodo.splice(target, 1);\n\n    this.setState({\n      visibleTodos: [...updatedTodo],\n      filteredTodos: [...updatedTodo],\n    });\n  }\n\n  handleDestroyAllCompletedTodos = () => {\n    this.setState(prevState => ({\n      visibleTodos: prevState.visibleTodos\n        .filter(todo => todo.completed === false),\n      filteredTodos: prevState.visibleTodos\n        .filter(todo => todo.completed === false),\n    }));\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <Header\n          onSubmit={this.addTodo}\n        />\n        <Main\n          toggleTodo={this.handleToggleTodo}\n          destroyTodo={this.handleDestroyTodo}\n          filteredTodos={this.state.filteredTodos}\n          allToggleTodo={this.handleAllToggleTodo}\n        />\n        <Footer\n          destroyAllCompletedTodos={this.handleDestroyAllCompletedTodos}\n          handleFilterByField={this.handleFilterByField}\n          filteredTodos={this.state.filteredTodos}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}